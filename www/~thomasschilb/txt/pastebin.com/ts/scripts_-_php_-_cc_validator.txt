// All valid credit card numbers
const valid1 = [4, 5, 3, 9, 6, 7, 7, 9, 0, 8, 0, 1, 6, 8, 0, 8];
const valid2 = [5, 5, 3, 5, 7, 6, 6, 7, 6, 8, 7, 5, 1, 4, 3, 9];
const valid3 = [3, 7, 1, 6, 1, 2, 0, 1, 9, 9, 8, 5, 2, 3, 6];
const valid4 = [6, 0, 1, 1, 1, 4, 4, 3, 4, 0, 6, 8, 2, 9, 0, 5];
const valid5 = [4, 5, 3, 9, 4, 0, 4, 9, 6, 7, 8, 6, 9, 6, 6, 6];

// All invalid credit card numbers
const invalid1 = [4, 5, 3, 2, 7, 7, 8, 7, 7, 1, 0, 9, 1, 7, 9, 5];
const invalid2 = [5, 7, 9, 5, 5, 9, 3, 3, 9, 2, 1, 3, 4, 6, 4, 3];
const invalid3 = [3, 7, 5, 7, 9, 6, 0, 8, 4, 4, 5, 9, 9, 1, 4];
const invalid4 = [6, 0, 1, 1, 1, 2, 7, 9, 6, 1, 7, 7, 7, 9, 3, 5];
const invalid5 = [5, 3, 8, 2, 0, 1, 9, 7, 7, 2, 8, 8, 3, 8, 5, 4];

// Can be either valid or invalid
const mystery1 = [3, 4, 4, 8, 0, 1, 9, 6, 8, 3, 0, 5, 4, 1, 4];
const mystery2 = [5, 4, 6, 6, 1, 0, 0, 8, 6, 1, 6, 2, 0, 2, 3, 9];
const mystery3 = [6, 0, 1, 1, 3, 7, 7, 0, 2, 0, 9, 6, 2, 6, 5, 6, 2, 0, 3];
const mystery4 = [4, 9, 2, 9, 8, 7, 7, 1, 6, 9, 2, 1, 7, 0, 9, 3];
const mystery5 = [4, 9, 1, 3, 5, 4, 0, 4, 6, 3, 0, 7, 2, 5, 2, 3];

// An array of all the arrays above
const batch = [valid1, valid2, valid3, valid4, valid5, invalid1, invalid2, invalid3, invalid4, invalid5, mystery1, mystery2, mystery3, mystery4, mystery5];

// Add your functions below:

/* Function that check valid cards in array */

let validateCred = (array) => {
  let sum;
  let kard;
  let arr = [];
	for (let i = array.length - 2; i >= 0; i= i-2) {
	  sum = array[i] * 2;
	  if (sum > 9) {
	    sum = sum - 9;
	    arr.push(sum);
	} else {
	    arr.push(sum);
	  };
	};
	for (let j = array.length - 1; j >= 0; j= j-2) {
	arr.push(array[j]);
	};
	kard = arr.reduceRight(function (a,b) {
	return a+b;
	});
	return kard % 10 === 0
}
/* Calling a function inside a loop  to 
check valid cards and to log  them */
// for (let b = 0; b < batch.length; b++) {
//   //console.log(batch[b] + ' ' + validateCred(batch[b]));
//   if (validateCred(batch[b]) === true) {
//     console.log (batch[b] + ' is true');
//   }
// }
/* Function that check invalid cards and log them */

let invalidArr = []

let findInvalidCards = () => {
  for (let f = 0; f < batch.length; f++) {
    if (validateCred(batch[f]) === false ) {
      invalidArr.push(batch[f]);
      idInvalidCardCompanies(batch[f][0]);
    }
  }
  const uniqueCC = [...new Set(cc)];
  console.log(uniqueCC);
  return invalidArr;
}

let cc = [];

let idInvalidCardCompanies = (invalidArr) => {
    switch(invalidArr) {
      case 3:
        cc.push('3 is Amex');
        break;
      case 4:
        cc.push('4 is Visa');
        break;
      case 5:
        cc.push('5 is Mastercard');
        break;
      case 6:
        cc.push('6 is Discover');
        break;
      default:
        cc.push('Not found');
        break;
    };
};


//idInvalidCardCompanies();

console.log(findInvalidCards());